// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  name        String?
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  roles       String
  credentials Credentials?
  videos      Video[]
  jobs        Job[]        @relation("JobCreator")
  editorJobs  Job[]        @relation("JobEditor")
}

model Credentials {
  id        String   @id @default(cuid())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  key       String //2way normal->encrypt->decrypt
}

model Video {
  id            String   @id @default(cuid())
  author        User     @relation(fields: [authorId], references: [id])
  authorId      String   @unique
  title         String
  description   String
  url           String
  category      String
  forKids       Boolean
  thumbnail     String
  isVerified    Boolean
  tags          String[]
  formats       String
  privacyStatus String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Job {
  id        String   @id @default(cuid())
  author    User     @relation("JobCreator", fields: [authorId], references: [id])
  authorId  String   @unique
  title     String
  editor    User     @relation("JobEditor", fields: [editorId], references: [id])
  editorId  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
